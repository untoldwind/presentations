<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microexchange2016 on My New Hugo Site</title>
    <link>http://replace-this-with-your-hugo-site.com/presentations/microexchange2016.html</link>
    <description>Recent content in Microexchange2016 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jan 2016 18:01:10 +0100</lastBuildDate>
    <atom:link href="http://replace-this-with-your-hugo-site.com/presentations/microexchange2016.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Common scenario</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/01-scenario.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/01-scenario.html</guid>
      <description>&lt;img class=&#34;centered&#34; src=&#34;../../slides/microexchange2016/images/scenario.svg&#34;&gt;&lt;/img&gt;

</description>
    </item>
    
    <item>
      <title>Desired build pipeline</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/02-desired-build-pipeline.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/02-desired-build-pipeline.html</guid>
      <description>&lt;img class=&#34;centered&#34; src=&#34;../../slides/microexchange2016/images/build-pipeline.svg&#34;&gt;&lt;/img&gt;

</description>
    </item>
    
    <item>
      <title>Document by example</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/05-document-by-examples.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/05-document-by-examples.html</guid>
      <description>&lt;ul class=&#34;incremental&#34;&gt;
&lt;li&gt;Write your own consumer test (or smoke test) for your service

&lt;ul&gt;
&lt;li&gt;Test your service as near to production as possible (staging environment)&lt;/li&gt;
&lt;li&gt;Integrate it in your deployment chain&lt;/li&gt;
&lt;li&gt;If possible use a BDD test-framework&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Log all HTTP requests/responses&lt;/li&gt;
&lt;li&gt;Generate a report from theses logs&lt;/li&gt;
&lt;li&gt;Publish this report where other developers can easily find them&lt;/li&gt;
&lt;li&gt;Optional: Record all html requests with a mock-tool (e.g. &lt;a href=&#34;http://wiremock.org/&#34;&gt;Wiremock&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Example: Check deserializers</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/11-test-deserializers.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/11-test-deserializers.html</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;AuthorSpec&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Specification&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ScalaCheck&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;MustMatchers&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; swaggerCheck &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;SwaggerChecks&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;bookdb_api.yaml&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

  &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Author&amp;quot;&lt;/span&gt; should &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;be receivable&amp;quot;&lt;/span&gt; in &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;implicit&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; arbitraryJson &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;CheckJsValue&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;](&lt;/span&gt;
                                     swaggerCheck&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;jsonGenerator&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Author&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

      prop &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        json&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;CheckJsValue&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;JsSuccess&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;,&lt;/span&gt; path&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Json&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;parse&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;json&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;minified&lt;span style=&#34;color: #333333&#34;&gt;).&lt;/span&gt;validate&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Author&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]&lt;/span&gt;

          path&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt; must be equalTo &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Example: Check serializers</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/10-test-serializers.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/10-test-serializers.html</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;AuthorSpec&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Specification&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ScalaCheck&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;MustMatchers&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; swaggerCheck &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;SwaggerChecks&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;bookdb_api.yaml&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

  &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Author&amp;quot;&lt;/span&gt; should &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;be sendable&amp;quot;&lt;/span&gt; in &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;implicit&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; arbitraryAuthor &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Author&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;](&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        id &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Gen&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;uuid
        name &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;arbitrary&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]&lt;/span&gt;
        description &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;arbitrary&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Option&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]]&lt;/span&gt;
      &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;yield&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Author&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color: #333333&#34;&gt;,&lt;/span&gt; name&lt;span style=&#34;color: #333333&#34;&gt;,&lt;/span&gt; description&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

      &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; verifier &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; swaggerCheck&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;jsonVerifier&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Author&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;

      prop &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        author&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Author&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; json &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Json&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;stringify&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Json&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;toJson&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;author&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

          verifier&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;verify&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;json&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; must be equalTo &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ValidationResult&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;success
      &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Example: Cucumber HTML report</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/07-cucumber-report.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/07-cucumber-report.html</guid>
      <description>&lt;div class=&#34;center-box&#34;&gt;
    &lt;iframe src=&#34;../../slides/microexchange2016/cucumber-report/index.html&#34;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Example: Cucumber JVM</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/06-cucumber-code.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/06-cucumber-code.html</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;Feature:&lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt; Manage authors&lt;/span&gt;
&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;Scenario:&lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt; Add and remove author&lt;/span&gt;
&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;    Given: A running book database&lt;/span&gt;
&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;    When &lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;An author with name &amp;quot;&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;Test Writer&lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;&amp;quot; is added&lt;/span&gt;
&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;Then &lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;The created author does exists&lt;/span&gt;
&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;AuthorStepdefs&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color: #555555; font-weight: bold&#34;&gt;@When&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;^An author with name \&amp;quot;([^\&amp;quot;]*)\&amp;quot; is added$&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;anAuthorWithNameIsAdded&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;String authorName&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;throws&lt;/span&gt; Throwable &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        Author author &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; Author&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;authorName&lt;span style=&#34;color: #333333&#34;&gt;);&lt;/span&gt;
        Request request &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; Request&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;Post&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;config&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;baseUrl&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;resolve&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;/v1/authors&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;
                                 &lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;JsonHelper&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;valueToEntity&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;author&lt;span style=&#34;color: #333333&#34;&gt;));&lt;/span&gt;
        HttpResponse response &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color: #333333&#34;&gt;);&lt;/span&gt;

        assertThat&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;color: #333333&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;isCreated&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;hasHeader&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;HttpHeaders&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;LOCATION&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;);&lt;/span&gt;
        authorUri &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; Optional&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;of&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;response&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;getFirstHeader&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;HttpHeaders&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;LOCATION&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;
                                        &lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;getValue&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #555555; font-weight: bold&#34;&gt;@Then&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;^The created author does exists$&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;theCreatedAuthorDoesExists&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;throws&lt;/span&gt; Throwable &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        Request request &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; Request&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;Get&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;authorUri&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;orElseThrow&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; RuntimeException&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Author uri not set&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)));&lt;/span&gt;

        author &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; Optional&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;of&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;executeJson&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color: #333333&#34;&gt;,&lt;/span&gt; Author&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0000CC&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example: Swagger 2.0 specification</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/09-swagger-example.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/09-swagger-example.html</guid>
      <description>&lt;table border=&#34;0&#34; width=&#34;100%&#34;&gt;
&lt;tr&gt;
&lt;td width=&#34;50%&#34;&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;swagger: &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;
info:
  title: Book database API
  description: Manage all your books
  version: 1.0.0
basePath: /v1
paths:
  /authors:
    post:
      summary: Create a new author
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;#/definitions/Author&amp;quot;&lt;/span&gt;
      responses:
        &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;#39;201&amp;#39;&lt;/span&gt;:
          description: Author successfully created
          headers:
            Location:
              type: string
              format: uri
        default:
          description: Unexpected error
          schema:
            $ref: &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;#39;#/definitions/Error&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/td&gt;
&lt;td width=&#34;50%&#34;&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;definitions:
  Author:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      name:
        type: string
      description:
        type: string
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: string
&lt;span style=&#34;color: #0e84b5; font-weight: bold&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Example: Test controller</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/13-contoller-test.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/13-contoller-test.html</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;AuthorsControllerSpec&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;PlaySpecification&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ScalaCheck&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Mockito&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; swaggerCheck &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;SwaggerChecks&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;bookdb_api.yaml&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

  &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;AuthorsController&amp;quot;&lt;/span&gt; should &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;handle all /authors routes&amp;quot;&lt;/span&gt; in &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;implicit&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; arbitraryRequest &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt;
        &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;PlayOperationVerifier&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;](&lt;/span&gt;swaggerCheck&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;operationVerifier&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;startsWith&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;/v1/authors&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;)))&lt;/span&gt;

      prop &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        requestVerifier&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;PlayOperationVerifier&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Some&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; route&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;requestVerifier&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;request&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;

          requestVerifier&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;responseVerifier&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;verify&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; must be equalTo &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ValidationResult&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;success
      &lt;span style=&#34;color: #333333&#34;&gt;}.&lt;/span&gt;setContext&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;WithApplication&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;testApp&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{})&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;

  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;def&lt;/span&gt; testApp&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Application&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; mockAuthorDAO &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; mock&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;AuthorDAO&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #333333&#34;&gt;...&lt;/span&gt;setup mockAuthorDAO&lt;span style=&#34;color: #333333&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;GuiceApplicationBuilder&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt;
      &lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;overrides&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;bind&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;AuthorDAO&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;].&lt;/span&gt;toInstance&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;mockAuthorDAO&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;
      &lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;build&lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt;
  &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Example: Test router</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/12-test-router.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/12-test-router.html</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;RouterSpec&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;PlaySpecification&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;ScalaCheck&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; swaggerCheck &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;SwaggerChecks&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;bookdb_api.yaml&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;))&lt;/span&gt;

  &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;Router&amp;quot;&lt;/span&gt; should &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;have all specified routes&amp;quot;&lt;/span&gt; in &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;implicit&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; arbitraryRequest &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt;
        &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Arbitrary&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;FakeRequest&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]](&lt;/span&gt;swaggerCheck&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;requestGenerator&lt;span style=&#34;color: #333333&#34;&gt;())&lt;/span&gt;

      prop &lt;span style=&#34;color: #333333&#34;&gt;{&lt;/span&gt;
        request&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;FakeRequest&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; router &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;Play&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;current&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;injector&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;instanceOf&lt;span style=&#34;color: #333333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #333399; font-weight: bold&#34;&gt;Router&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;]&lt;/span&gt;
          &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;val&lt;/span&gt; handler &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;=&lt;/span&gt; router&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;handlerFor&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;request&lt;span style=&#34;color: #333333&#34;&gt;)&lt;/span&gt;

          handler&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;isDefined aka &lt;span style=&#34;background-color: #fff0f0&#34;&gt;s&amp;quot;Handler for &lt;/span&gt;&lt;span style=&#34;background-color: #eeeeee&#34;&gt;${&lt;/span&gt;request&lt;span style=&#34;background-color: #eeeeee&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #fff0f0&#34;&gt;&amp;quot;&lt;/span&gt; must beTrue
      &lt;span style=&#34;color: #333333&#34;&gt;}.&lt;/span&gt;setContext&lt;span style=&#34;color: #333333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;WithApplication&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;{})&lt;/span&gt;
    &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #333333&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Further reading</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/14-further-reading.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/14-further-reading.html</guid>
      <description>&lt;ul&gt;
&lt;li&gt;SwaggerCheck: &lt;a href=&#34;https://github.com/leanovate/swagger-check&#34;&gt;https://github.com/leanovate/swagger-check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cucumber REST helper: &lt;a href=&#34;https://github.com/leanovate/cucumber-rest-helper&#34;&gt;https://github.com/leanovate/cucumber-rest-helper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Book db sample: &lt;a href=&#34;https://github.com/leanovate/book-db-sample&#34;&gt;https://github.com/leanovate/book-db-sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How to avoid most of them</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/04-how-to-avoid-most.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/04-how-to-avoid-most.html</guid>
      <description>&lt;ul class=&#34;incremental&#34;&gt;
&lt;li&gt;Provide precise documentation your API&lt;/li&gt;
&lt;li&gt;Developers love to read documentation&lt;/li&gt;
&lt;li&gt;... but hate to write it&lt;/li&gt;
&lt;li&gt;... and forget to update it&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Most common errors</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/03-most-common-errors.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/03-most-common-errors.html</guid>
      <description>&lt;ul class=&#34;incremental&#34;&gt;
&lt;li&gt;Data is not where it is expected to be, e.g. ...

&lt;ul&gt;
&lt;li&gt;... value is missing (even though it is supposed to be required)&lt;/li&gt;
&lt;li&gt;... typo in uri or json field-name&lt;/li&gt;
&lt;li&gt;... misunderstanding about json hierarchy&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Data is not in expected format, e.g. ...

&lt;ul&gt;
&lt;li&gt;... string &amp;quot;true&amp;quot; instead of boolean true&lt;/li&gt;
&lt;li&gt;... integer with unix-timestamp instead of string with iso-datetime&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Consumer sends data while provider is in wrong state, e.g. ...

&lt;ul&gt;
&lt;li&gt;... reference entities that should have been create before&lt;/li&gt;
&lt;li&gt;... value is out of bounds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Provide API specification</title>
      <link>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/08-provide-api-specification.html</link>
      <pubDate>Tue, 12 Jan 2016 18:01:10 +0100</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/slides/microexchange2016/08-provide-api-specification.html</guid>
      <description>&lt;ul class=&#34;incremental&#34;&gt;
&lt;li&gt;Document your API with a REST specification (e.g. &lt;a href=&#34;http://swagger.io/&#34;&gt;Swagger&lt;/a&gt; or &lt;a href=&#34;http://raml.org/&#34;&gt;RAML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;How to keep the specification in-sync with reality?&lt;/li&gt;
&lt;li&gt;Usual approach:

&lt;ul&gt;
&lt;li&gt;Enrich/polute to your source-code with lots of annotations and generate specification automatically&lt;/li&gt;
&lt;li&gt;Accuracy of the specification highly depends on the framework (jax-rs, Play, Ratpack, liberator, ...)&lt;/li&gt;
&lt;li&gt;No guarantee that a new API version is backward compatible&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Advanced approach:

&lt;ul&gt;
&lt;li&gt;Write specification (before actually writing the code)&lt;/li&gt;
&lt;li&gt;Integrate specification in unit-tests using property-based testing (e.g. &lt;a href=&#34;https://www.scalacheck.org/&#34;&gt;ScalaCheck&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>